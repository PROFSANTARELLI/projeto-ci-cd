O que o pipeline faz?
Escuta push/pull para a branch main
Faz checkout do repositório
Configura Python 3.10
Instala dependências do requirements.txt
Executa os testes com unittest





# math_utils.py
def add(a, b):
    return a + b

def subtract(a, b):
    return a - b


import unittest
from math_utils import add, subtract

class TestMathUtils(unittest.TestCase):
    def test_add(self):
        self.assertEqual(add(3, 5), 8)
        self.assertEqual(add(-1, 1), 0)

    def test_subtract(self):
        self.assertEqual(subtract(10, 4), 6)
        self.assertEqual(subtract(0, 0), 0)

if __name__ == '__main__':
    unittest.main()


Arquivo requirements.txt
# requirements.txt
Como usamos apenas o módulo unittest da biblioteca padrão do Python, o requirements.txt pode ficar vazio, ou você pode usá-lo para listar dependências futuras.


 Script do GitHub Actions (.github/workflows/python-ci.yml)

name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Rodar testes unitários
      run: |
        python -m unittest discover -s . -p "test_*.py"
